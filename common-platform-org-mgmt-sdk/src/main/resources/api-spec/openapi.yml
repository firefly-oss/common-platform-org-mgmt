openapi: 3.0.1
info:
  title: common-platform-org-mgmt
  description: Organization Management Core Application
  contact:
    name: Firefly Software Solutions Inc
    email: dev@getfirefly.io
  version: 1.0.0
servers:
  - url: http://core.getfirefly.io/organization
    description: Development Environment
  - url: /
    description: Local Development Environment
tags:
  - name: Branch Management
    description: APIs for managing branches
  - name: Working Calendar Management
    description: APIs for managing working calendars of a specific bank
  - name: Bank Region Management
    description: APIs for managing bank regions
  - name: Branch Hours Management
    description: APIs for managing operating hours of a specific branch
  - name: Bank Division Management
    description: APIs for managing bank divisions
  - name: Bank Holiday Management
    description: APIs for managing bank holidays
  - name: Branch Position Management
    description: APIs for managing positions of a specific branch department
  - name: Calendar Assignment Management
    description: APIs for managing assignments of a specific working calendar
  - name: Bank Branch Management
    description: APIs for managing branches of a specific bank
  - name: Bank Management
    description: APIs for managing banks
  - name: Branch Department Management
    description: APIs for managing departments of a specific branch
paths:
  /api/v1/holidays/{holidayId}:
    get:
      tags:
        - Bank Holiday Management
      summary: Get bank holiday by ID
      description: Returns a bank holiday based on its ID
      operationId: getBankHolidayById
      parameters:
        - name: holidayId
          in: path
          description: ID of the bank holiday to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved bank holiday
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankHolidayDTO'
        '404':
          description: Bank holiday not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankHolidayDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankHolidayDTO'
    put:
      tags:
        - Bank Holiday Management
      summary: Update bank holiday
      description: Updates an existing bank holiday with the provided details
      operationId: updateBankHoliday
      parameters:
        - name: holidayId
          in: path
          description: ID of the bank holiday to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankHolidayDTO'
        required: true
      responses:
        '200':
          description: Bank holiday successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankHolidayDTO'
        '400':
          description: Invalid bank holiday data supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankHolidayDTO'
        '404':
          description: Bank holiday not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankHolidayDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankHolidayDTO'
    delete:
      tags:
        - Bank Holiday Management
      summary: Delete bank holiday
      description: Deletes a bank holiday based on its ID
      operationId: deleteBankHoliday
      parameters:
        - name: holidayId
          in: path
          description: ID of the bank holiday to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Bank holiday successfully deleted
        '404':
          description: Bank holiday not found
        '500':
          description: Internal server error
  /api/v1/branches/{branchId}/hours/{hoursId}:
    get:
      tags:
        - Branch Hours Management
      summary: Get branch hours by ID
      description: Returns operating hours of a specific branch based on its ID
      operationId: getBranchHoursById
      parameters:
        - name: branchId
          in: path
          description: ID of the branch
          required: true
          schema:
            type: string
            format: uuid
        - name: hoursId
          in: path
          description: ID of the hours to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved branch hours
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchHoursDTO'
        '404':
          description: Branch or hours not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchHoursDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchHoursDTO'
    put:
      tags:
        - Branch Hours Management
      summary: Update branch hours
      description: Updates existing operating hours of a specific branch with the provided details
      operationId: updateBranchHours
      parameters:
        - name: branchId
          in: path
          description: ID of the branch
          required: true
          schema:
            type: string
            format: uuid
        - name: hoursId
          in: path
          description: ID of the hours to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BranchHoursDTO'
        required: true
      responses:
        '200':
          description: Branch hours successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchHoursDTO'
        '400':
          description: Invalid branch hours data supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchHoursDTO'
        '404':
          description: Branch or hours not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchHoursDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchHoursDTO'
    delete:
      tags:
        - Branch Hours Management
      summary: Delete branch hours
      description: Deletes operating hours of a specific branch based on its ID
      operationId: deleteBranchHours
      parameters:
        - name: branchId
          in: path
          description: ID of the branch
          required: true
          schema:
            type: string
            format: uuid
        - name: hoursId
          in: path
          description: ID of the hours to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Branch hours successfully deleted
        '404':
          description: Branch or hours not found
        '500':
          description: Internal server error
  /api/v1/branches/{branchId}/departments/{departmentId}/positions/{positionId}:
    get:
      tags:
        - Branch Position Management
      summary: Get branch position by ID
      description: Returns a position of a specific branch department based on its ID
      operationId: getBranchPositionById
      parameters:
        - name: branchId
          in: path
          description: ID of the branch
          required: true
          schema:
            type: string
            format: uuid
        - name: departmentId
          in: path
          description: ID of the department
          required: true
          schema:
            type: string
            format: uuid
        - name: positionId
          in: path
          description: ID of the position to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved branch position
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchPositionDTO'
        '404':
          description: Branch, department, or position not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchPositionDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchPositionDTO'
    put:
      tags:
        - Branch Position Management
      summary: Update branch position
      description: Updates an existing position of a specific branch department with the provided details
      operationId: updateBranchPosition
      parameters:
        - name: branchId
          in: path
          description: ID of the branch
          required: true
          schema:
            type: string
            format: uuid
        - name: departmentId
          in: path
          description: ID of the department
          required: true
          schema:
            type: string
            format: uuid
        - name: positionId
          in: path
          description: ID of the position to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BranchPositionDTO'
        required: true
      responses:
        '200':
          description: Branch position successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchPositionDTO'
        '400':
          description: Invalid branch position data supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchPositionDTO'
        '404':
          description: Branch, department, or position not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchPositionDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchPositionDTO'
    delete:
      tags:
        - Branch Position Management
      summary: Delete branch position
      description: Deletes a position of a specific branch department based on its ID
      operationId: deleteBranchPosition
      parameters:
        - name: branchId
          in: path
          description: ID of the branch
          required: true
          schema:
            type: string
            format: uuid
        - name: departmentId
          in: path
          description: ID of the department
          required: true
          schema:
            type: string
            format: uuid
        - name: positionId
          in: path
          description: ID of the position to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Branch position successfully deleted
        '404':
          description: Branch, department, or position not found
        '500':
          description: Internal server error
  /api/v1/branches/{branchId}/departments/{departmentId}:
    get:
      tags:
        - Branch Department Management
      summary: Get branch department by ID
      description: Returns a department of a specific branch based on its ID
      operationId: getBranchDepartmentById
      parameters:
        - name: branchId
          in: path
          description: ID of the branch
          required: true
          schema:
            type: string
            format: uuid
        - name: departmentId
          in: path
          description: ID of the department to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved branch department
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchDepartmentDTO'
        '404':
          description: Branch or department not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchDepartmentDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchDepartmentDTO'
    put:
      tags:
        - Branch Department Management
      summary: Update branch department
      description: Updates an existing department of a specific branch with the provided details
      operationId: updateBranchDepartment
      parameters:
        - name: branchId
          in: path
          description: ID of the branch
          required: true
          schema:
            type: string
            format: uuid
        - name: departmentId
          in: path
          description: ID of the department to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BranchDepartmentDTO'
        required: true
      responses:
        '200':
          description: Branch department successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchDepartmentDTO'
        '400':
          description: Invalid branch department data supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchDepartmentDTO'
        '404':
          description: Branch or department not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchDepartmentDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchDepartmentDTO'
    delete:
      tags:
        - Branch Department Management
      summary: Delete branch department
      description: Deletes a department of a specific branch based on its ID
      operationId: deleteBranchDepartment
      parameters:
        - name: branchId
          in: path
          description: ID of the branch
          required: true
          schema:
            type: string
            format: uuid
        - name: departmentId
          in: path
          description: ID of the department to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Branch department successfully deleted
        '404':
          description: Branch or department not found
        '500':
          description: Internal server error
  /api/v1/branches/{branchId}:
    get:
      tags:
        - Branch Management
      summary: Get branch by ID
      description: Returns a branch based on its ID
      operationId: getBranchById
      parameters:
        - name: branchId
          in: path
          description: ID of the branch to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved branch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchDTO'
        '404':
          description: Branch not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchDTO'
    put:
      tags:
        - Branch Management
      summary: Update branch
      description: Updates an existing branch with the provided details
      operationId: updateBranch
      parameters:
        - name: branchId
          in: path
          description: ID of the branch to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BranchDTO'
        required: true
      responses:
        '200':
          description: Branch successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchDTO'
        '400':
          description: Invalid branch data supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchDTO'
        '404':
          description: Branch not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchDTO'
    delete:
      tags:
        - Branch Management
      summary: Delete branch
      description: Deletes a branch based on its ID
      operationId: deleteBranch
      parameters:
        - name: branchId
          in: path
          description: ID of the branch to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Branch successfully deleted
        '404':
          description: Branch not found
        '500':
          description: Internal server error
  /api/v1/banks/{bankId}/divisions/{divisionId}/regions/{regionId}:
    get:
      tags:
        - Bank Region Management
      summary: Get bank region by ID
      description: Returns a region of a specific bank division based on its ID
      operationId: getBankRegionById
      parameters:
        - name: bankId
          in: path
          description: ID of the bank
          required: true
          schema:
            type: string
            format: uuid
        - name: divisionId
          in: path
          description: ID of the division
          required: true
          schema:
            type: string
            format: uuid
        - name: regionId
          in: path
          description: ID of the region to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved bank region
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankRegionDTO'
        '404':
          description: Bank, division, or region not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankRegionDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankRegionDTO'
    put:
      tags:
        - Bank Region Management
      summary: Update bank region
      description: Updates an existing region of a specific bank division with the provided details
      operationId: updateBankRegion
      parameters:
        - name: bankId
          in: path
          description: ID of the bank
          required: true
          schema:
            type: string
            format: uuid
        - name: divisionId
          in: path
          description: ID of the division
          required: true
          schema:
            type: string
            format: uuid
        - name: regionId
          in: path
          description: ID of the region to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankRegionDTO'
        required: true
      responses:
        '200':
          description: Bank region successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankRegionDTO'
        '400':
          description: Invalid bank region data supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankRegionDTO'
        '404':
          description: Bank, division, or region not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankRegionDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankRegionDTO'
    delete:
      tags:
        - Bank Region Management
      summary: Delete bank region
      description: Deletes a region of a specific bank division based on its ID
      operationId: deleteBankRegion
      parameters:
        - name: bankId
          in: path
          description: ID of the bank
          required: true
          schema:
            type: string
            format: uuid
        - name: divisionId
          in: path
          description: ID of the division
          required: true
          schema:
            type: string
            format: uuid
        - name: regionId
          in: path
          description: ID of the region to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Bank region successfully deleted
        '404':
          description: Bank, division, or region not found
        '500':
          description: Internal server error
  /api/v1/banks/{bankId}/divisions/{divisionId}:
    get:
      tags:
        - Bank Division Management
      summary: Get bank division by ID
      description: Returns a division of a specific bank based on its ID
      operationId: getBankDivisionById
      parameters:
        - name: bankId
          in: path
          description: ID of the bank
          required: true
          schema:
            type: string
            format: uuid
        - name: divisionId
          in: path
          description: ID of the division to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved bank division
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankDivisionDTO'
        '404':
          description: Bank or division not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankDivisionDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankDivisionDTO'
    put:
      tags:
        - Bank Division Management
      summary: Update bank division
      description: Updates an existing division of a specific bank with the provided details
      operationId: updateBankDivision
      parameters:
        - name: bankId
          in: path
          description: ID of the bank
          required: true
          schema:
            type: string
            format: uuid
        - name: divisionId
          in: path
          description: ID of the division to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankDivisionDTO'
        required: true
      responses:
        '200':
          description: Bank division successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankDivisionDTO'
        '400':
          description: Invalid bank division data supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankDivisionDTO'
        '404':
          description: Bank or division not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankDivisionDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankDivisionDTO'
    delete:
      tags:
        - Bank Division Management
      summary: Delete bank division
      description: Deletes a division of a specific bank based on its ID
      operationId: deleteBankDivision
      parameters:
        - name: bankId
          in: path
          description: ID of the bank
          required: true
          schema:
            type: string
            format: uuid
        - name: divisionId
          in: path
          description: ID of the division to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Bank division successfully deleted
        '404':
          description: Bank or division not found
        '500':
          description: Internal server error
  /api/v1/banks/{bankId}/calendars/{calendarId}/assignments/{assignmentId}:
    get:
      tags:
        - Calendar Assignment Management
      summary: Get calendar assignment by ID
      description: Returns an assignment of a specific working calendar based on its ID
      operationId: getCalendarAssignmentById
      parameters:
        - name: bankId
          in: path
          description: ID of the bank
          required: true
          schema:
            type: string
            format: uuid
        - name: calendarId
          in: path
          description: ID of the calendar
          required: true
          schema:
            type: string
            format: uuid
        - name: assignmentId
          in: path
          description: ID of the assignment to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved calendar assignment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarAssignmentDTO'
        '404':
          description: Bank, calendar, or assignment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarAssignmentDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarAssignmentDTO'
    put:
      tags:
        - Calendar Assignment Management
      summary: Update calendar assignment
      description: Updates an existing assignment of a specific working calendar with the provided details
      operationId: updateCalendarAssignment
      parameters:
        - name: bankId
          in: path
          description: ID of the bank
          required: true
          schema:
            type: string
            format: uuid
        - name: calendarId
          in: path
          description: ID of the calendar
          required: true
          schema:
            type: string
            format: uuid
        - name: assignmentId
          in: path
          description: ID of the assignment to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalendarAssignmentDTO'
        required: true
      responses:
        '200':
          description: Calendar assignment successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarAssignmentDTO'
        '400':
          description: Invalid calendar assignment data supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarAssignmentDTO'
        '404':
          description: Bank, calendar, or assignment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarAssignmentDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarAssignmentDTO'
    delete:
      tags:
        - Calendar Assignment Management
      summary: Delete calendar assignment
      description: Deletes an assignment of a specific working calendar based on its ID
      operationId: deleteCalendarAssignment
      parameters:
        - name: bankId
          in: path
          description: ID of the bank
          required: true
          schema:
            type: string
            format: uuid
        - name: calendarId
          in: path
          description: ID of the calendar
          required: true
          schema:
            type: string
            format: uuid
        - name: assignmentId
          in: path
          description: ID of the assignment to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Calendar assignment successfully deleted
        '404':
          description: Bank, calendar, or assignment not found
        '500':
          description: Internal server error
  /api/v1/banks/{bankId}/calendars/{calendarId}:
    get:
      tags:
        - Working Calendar Management
      summary: Get working calendar by ID
      description: Returns a working calendar of a specific bank based on its ID
      operationId: getWorkingCalendarById
      parameters:
        - name: bankId
          in: path
          description: ID of the bank
          required: true
          schema:
            type: string
            format: uuid
        - name: calendarId
          in: path
          description: ID of the calendar to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved working calendar
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkingCalendarDTO'
        '404':
          description: Bank or calendar not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkingCalendarDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkingCalendarDTO'
    put:
      tags:
        - Working Calendar Management
      summary: Update working calendar
      description: Updates an existing working calendar of a specific bank with the provided details
      operationId: updateWorkingCalendar
      parameters:
        - name: bankId
          in: path
          description: ID of the bank
          required: true
          schema:
            type: string
            format: uuid
        - name: calendarId
          in: path
          description: ID of the calendar to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkingCalendarDTO'
        required: true
      responses:
        '200':
          description: Working calendar successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkingCalendarDTO'
        '400':
          description: Invalid working calendar data supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkingCalendarDTO'
        '404':
          description: Bank or calendar not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkingCalendarDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkingCalendarDTO'
    delete:
      tags:
        - Working Calendar Management
      summary: Delete working calendar
      description: Deletes a working calendar of a specific bank based on its ID
      operationId: deleteWorkingCalendar
      parameters:
        - name: bankId
          in: path
          description: ID of the bank
          required: true
          schema:
            type: string
            format: uuid
        - name: calendarId
          in: path
          description: ID of the calendar to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Working calendar successfully deleted
        '404':
          description: Bank or calendar not found
        '500':
          description: Internal server error
  /api/v1/banks/{bankId}/branches/{branchId}:
    get:
      tags:
        - Bank Branch Management
      summary: Get branch by ID for a bank
      description: Returns a branch of a specific bank based on its ID
      operationId: getBranchByIdForBank
      parameters:
        - name: bankId
          in: path
          description: ID of the bank
          required: true
          schema:
            type: string
            format: uuid
        - name: branchId
          in: path
          description: ID of the branch to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved branch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchDTO'
        '404':
          description: Bank or branch not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchDTO'
    put:
      tags:
        - Bank Branch Management
      summary: Update branch for a bank
      description: Updates an existing branch of a specific bank with the provided details
      operationId: updateBranchForBank
      parameters:
        - name: bankId
          in: path
          description: ID of the bank
          required: true
          schema:
            type: string
            format: uuid
        - name: branchId
          in: path
          description: ID of the branch to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BranchDTO'
        required: true
      responses:
        '200':
          description: Branch successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchDTO'
        '400':
          description: Invalid branch data supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchDTO'
        '404':
          description: Bank or branch not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchDTO'
    delete:
      tags:
        - Bank Branch Management
      summary: Delete branch for a bank
      description: Deletes a branch of a specific bank based on its ID
      operationId: deleteBranchForBank
      parameters:
        - name: bankId
          in: path
          description: ID of the bank
          required: true
          schema:
            type: string
            format: uuid
        - name: branchId
          in: path
          description: ID of the branch to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Branch successfully deleted
        '404':
          description: Bank or branch not found
        '500':
          description: Internal server error
  /api/v1/banks/{bankId}:
    get:
      tags:
        - Bank Management
      summary: Get bank by ID
      description: Returns a bank based on its ID
      operationId: getBankById
      parameters:
        - name: bankId
          in: path
          description: ID of the bank to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved bank
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankDTO'
        '404':
          description: Bank not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankDTO'
    put:
      tags:
        - Bank Management
      summary: Update bank
      description: Updates an existing bank with the provided details
      operationId: updateBank
      parameters:
        - name: bankId
          in: path
          description: ID of the bank to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankDTO'
        required: true
      responses:
        '200':
          description: Bank successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankDTO'
        '400':
          description: Invalid bank data supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankDTO'
        '404':
          description: Bank not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankDTO'
    delete:
      tags:
        - Bank Management
      summary: Delete bank
      description: Deletes a bank based on its ID
      operationId: deleteBank
      parameters:
        - name: bankId
          in: path
          description: ID of the bank to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Bank successfully deleted
        '404':
          description: Bank not found
        '500':
          description: Internal server error
  /api/v1/holidays/filter:
    post:
      tags:
        - Bank Holiday Management
      summary: Get all bank holidays with filtering
      description: Returns a paginated list of bank holidays based on filter criteria
      operationId: filterBankHolidays
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestBankHolidayDTO'
        required: true
      responses:
        '200':
          description: Successfully retrieved bank holidays
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseBankHolidayDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseBankHolidayDTO'
  /api/v1/holidays:
    post:
      tags:
        - Bank Holiday Management
      summary: Create a new bank holiday
      description: Creates a new bank holiday with the provided details
      operationId: createBankHoliday
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankHolidayDTO'
        required: true
      responses:
        '201':
          description: Bank holiday successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankHolidayDTO'
        '400':
          description: Invalid bank holiday data supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankHolidayDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankHolidayDTO'
  /api/v1/branches/{branchId}/hours/filter:
    post:
      tags:
        - Branch Hours Management
      summary: Get all hours for a branch with filtering
      description: Returns a paginated list of operating hours for a specific branch based on filter criteria
      operationId: filterBranchHours
      parameters:
        - name: branchId
          in: path
          description: ID of the branch
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestBranchHoursDTO'
        required: true
      responses:
        '200':
          description: Successfully retrieved branch hours
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseBranchHoursDTO'
        '404':
          description: Branch not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseBranchHoursDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseBranchHoursDTO'
  /api/v1/branches/{branchId}/hours:
    post:
      tags:
        - Branch Hours Management
      summary: Create new operating hours for a branch
      description: Creates new operating hours for a specific branch with the provided details
      operationId: createBranchHours
      parameters:
        - name: branchId
          in: path
          description: ID of the branch
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BranchHoursDTO'
        required: true
      responses:
        '201':
          description: Branch hours successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchHoursDTO'
        '400':
          description: Invalid branch hours data supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchHoursDTO'
        '404':
          description: Branch not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchHoursDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchHoursDTO'
  /api/v1/branches/{branchId}/departments/{departmentId}/positions/filter:
    post:
      tags:
        - Branch Position Management
      summary: Get all positions for a branch department with filtering
      description: Returns a paginated list of positions for a specific branch department based on filter criteria
      operationId: filterBranchPositions
      parameters:
        - name: branchId
          in: path
          description: ID of the branch
          required: true
          schema:
            type: string
            format: uuid
        - name: departmentId
          in: path
          description: ID of the department
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestBranchPositionDTO'
        required: true
      responses:
        '200':
          description: Successfully retrieved branch positions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseBranchPositionDTO'
        '404':
          description: Branch or department not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseBranchPositionDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseBranchPositionDTO'
  /api/v1/branches/{branchId}/departments/{departmentId}/positions:
    post:
      tags:
        - Branch Position Management
      summary: Create a new position for a branch department
      description: Creates a new position for a specific branch department with the provided details
      operationId: createBranchPosition
      parameters:
        - name: branchId
          in: path
          description: ID of the branch
          required: true
          schema:
            type: string
            format: uuid
        - name: departmentId
          in: path
          description: ID of the department
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BranchPositionDTO'
        required: true
      responses:
        '201':
          description: Branch position successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchPositionDTO'
        '400':
          description: Invalid branch position data supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchPositionDTO'
        '404':
          description: Branch or department not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchPositionDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchPositionDTO'
  /api/v1/branches/{branchId}/departments/filter:
    post:
      tags:
        - Branch Department Management
      summary: Get all departments for a branch with filtering
      description: Returns a paginated list of departments for a specific branch based on filter criteria
      operationId: filterBranchDepartments
      parameters:
        - name: branchId
          in: path
          description: ID of the branch
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestBranchDepartmentDTO'
        required: true
      responses:
        '200':
          description: Successfully retrieved branch departments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseBranchDepartmentDTO'
        '404':
          description: Branch not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseBranchDepartmentDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseBranchDepartmentDTO'
  /api/v1/branches/{branchId}/departments:
    post:
      tags:
        - Branch Department Management
      summary: Create a new department for a branch
      description: Creates a new department for a specific branch with the provided details
      operationId: createBranchDepartment
      parameters:
        - name: branchId
          in: path
          description: ID of the branch
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BranchDepartmentDTO'
        required: true
      responses:
        '201':
          description: Branch department successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchDepartmentDTO'
        '400':
          description: Invalid branch department data supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchDepartmentDTO'
        '404':
          description: Branch not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchDepartmentDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchDepartmentDTO'
  /api/v1/branches/filter:
    post:
      tags:
        - Branch Management
      summary: Get all branches with filtering
      description: Returns a paginated list of branches based on filter criteria
      operationId: filterBranches
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestBranchDTO'
        required: true
      responses:
        '200':
          description: Successfully retrieved branches
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseBranchDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseBranchDTO'
  /api/v1/branches:
    post:
      tags:
        - Branch Management
      summary: Create a new branch
      description: Creates a new branch with the provided details
      operationId: createBranch
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BranchDTO'
        required: true
      responses:
        '201':
          description: Branch successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchDTO'
        '400':
          description: Invalid branch data supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchDTO'
  /api/v1/banks/{bankId}/divisions/{divisionId}/regions/filter:
    post:
      tags:
        - Bank Region Management
      summary: Get all regions for a bank division with filtering
      description: Returns a paginated list of regions for a specific bank division based on filter criteria
      operationId: filterBankRegions
      parameters:
        - name: bankId
          in: path
          description: ID of the bank
          required: true
          schema:
            type: string
            format: uuid
        - name: divisionId
          in: path
          description: ID of the division
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestBankRegionDTO'
        required: true
      responses:
        '200':
          description: Successfully retrieved bank regions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseBankRegionDTO'
        '404':
          description: Bank or division not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseBankRegionDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseBankRegionDTO'
  /api/v1/banks/{bankId}/divisions/{divisionId}/regions:
    post:
      tags:
        - Bank Region Management
      summary: Create a new region for a bank division
      description: Creates a new region for a specific bank division with the provided details
      operationId: createBankRegion
      parameters:
        - name: bankId
          in: path
          description: ID of the bank
          required: true
          schema:
            type: string
            format: uuid
        - name: divisionId
          in: path
          description: ID of the division
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankRegionDTO'
        required: true
      responses:
        '201':
          description: Bank region successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankRegionDTO'
        '400':
          description: Invalid bank region data supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankRegionDTO'
        '404':
          description: Bank or division not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankRegionDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankRegionDTO'
  /api/v1/banks/{bankId}/divisions/filter:
    post:
      tags:
        - Bank Division Management
      summary: Get all divisions for a bank with filtering
      description: Returns a paginated list of divisions for a specific bank based on filter criteria
      operationId: filterBankDivisions
      parameters:
        - name: bankId
          in: path
          description: ID of the bank
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestBankDivisionDTO'
        required: true
      responses:
        '200':
          description: Successfully retrieved bank divisions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseBankDivisionDTO'
        '404':
          description: Bank not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseBankDivisionDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseBankDivisionDTO'
  /api/v1/banks/{bankId}/divisions:
    post:
      tags:
        - Bank Division Management
      summary: Create a new division for a bank
      description: Creates a new division for a specific bank with the provided details
      operationId: createBankDivision
      parameters:
        - name: bankId
          in: path
          description: ID of the bank
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankDivisionDTO'
        required: true
      responses:
        '201':
          description: Bank division successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankDivisionDTO'
        '400':
          description: Invalid bank division data supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankDivisionDTO'
        '404':
          description: Bank not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankDivisionDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankDivisionDTO'
  /api/v1/banks/{bankId}/calendars/{calendarId}/assignments/filter:
    post:
      tags:
        - Calendar Assignment Management
      summary: Get all assignments for a calendar with filtering
      description: Returns a paginated list of assignments for a specific working calendar based on filter criteria
      operationId: filterCalendarAssignments
      parameters:
        - name: bankId
          in: path
          description: ID of the bank
          required: true
          schema:
            type: string
            format: uuid
        - name: calendarId
          in: path
          description: ID of the calendar
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestCalendarAssignmentDTO'
        required: true
      responses:
        '200':
          description: Successfully retrieved calendar assignments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseCalendarAssignmentDTO'
        '404':
          description: Bank or calendar not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseCalendarAssignmentDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseCalendarAssignmentDTO'
  /api/v1/banks/{bankId}/calendars/{calendarId}/assignments:
    post:
      tags:
        - Calendar Assignment Management
      summary: Create a new assignment for a calendar
      description: Creates a new assignment for a specific working calendar with the provided details
      operationId: createCalendarAssignment
      parameters:
        - name: bankId
          in: path
          description: ID of the bank
          required: true
          schema:
            type: string
            format: uuid
        - name: calendarId
          in: path
          description: ID of the calendar
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalendarAssignmentDTO'
        required: true
      responses:
        '201':
          description: Calendar assignment successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarAssignmentDTO'
        '400':
          description: Invalid calendar assignment data supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarAssignmentDTO'
        '404':
          description: Bank or calendar not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarAssignmentDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarAssignmentDTO'
  /api/v1/banks/{bankId}/calendars/filter:
    post:
      tags:
        - Working Calendar Management
      summary: Get all calendars for a bank with filtering
      description: Returns a paginated list of working calendars for a specific bank based on filter criteria
      operationId: filterWorkingCalendars
      parameters:
        - name: bankId
          in: path
          description: ID of the bank
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestWorkingCalendarDTO'
        required: true
      responses:
        '200':
          description: Successfully retrieved working calendars
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseWorkingCalendarDTO'
        '404':
          description: Bank not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseWorkingCalendarDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseWorkingCalendarDTO'
  /api/v1/banks/{bankId}/calendars:
    post:
      tags:
        - Working Calendar Management
      summary: Create a new working calendar for a bank
      description: Creates a new working calendar for a specific bank with the provided details
      operationId: createWorkingCalendar
      parameters:
        - name: bankId
          in: path
          description: ID of the bank
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkingCalendarDTO'
        required: true
      responses:
        '201':
          description: Working calendar successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkingCalendarDTO'
        '400':
          description: Invalid working calendar data supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkingCalendarDTO'
        '404':
          description: Bank not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkingCalendarDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkingCalendarDTO'
  /api/v1/banks/{bankId}/branches/filter:
    post:
      tags:
        - Bank Branch Management
      summary: Get all branches for a bank with filtering
      description: Returns a paginated list of branches for a specific bank based on filter criteria
      operationId: filterBranchesForBank
      parameters:
        - name: bankId
          in: path
          description: ID of the bank
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestBranchDTO'
        required: true
      responses:
        '200':
          description: Successfully retrieved branches
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseBranchDTO'
        '404':
          description: Bank not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseBranchDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseBranchDTO'
  /api/v1/banks/{bankId}/branches:
    post:
      tags:
        - Bank Branch Management
      summary: Create a new branch for a bank
      description: Creates a new branch for a specific bank with the provided details
      operationId: createBranchForBank
      parameters:
        - name: bankId
          in: path
          description: ID of the bank
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BranchDTO'
        required: true
      responses:
        '201':
          description: Branch successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchDTO'
        '400':
          description: Invalid branch data supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchDTO'
        '404':
          description: Bank not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchDTO'
  /api/v1/banks/filter:
    post:
      tags:
        - Bank Management
      summary: Get all banks with filtering
      description: Returns a paginated list of banks based on filter criteria
      operationId: filterBanks
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestBankDTO'
        required: true
      responses:
        '200':
          description: Successfully retrieved banks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseBankDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseBankDTO'
  /api/v1/banks:
    post:
      tags:
        - Bank Management
      summary: Create a new bank
      description: Creates a new bank with the provided details
      operationId: createBank
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankDTO'
        required: true
      responses:
        '201':
          description: Bank successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankDTO'
        '400':
          description: Invalid bank data supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankDTO'
components:
  schemas:
    BankHolidayDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        bankId:
          type: string
          format: uuid
        branchId:
          type: string
          format: uuid
        countryId:
          type: string
          format: uuid
        name:
          type: string
        date:
          type: string
          format: date
        isRecurring:
          type: boolean
        description:
          type: string
        createdAt:
          type: string
          format: date-time
        createdBy:
          type: string
          format: uuid
        updatedAt:
          type: string
          format: date-time
        updatedBy:
          type: string
          format: uuid
    BranchHoursDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        branchId:
          type: string
          format: uuid
        dayOfWeek:
          type: string
          enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        openTime:
          $ref: '#/components/schemas/LocalTime'
        closeTime:
          $ref: '#/components/schemas/LocalTime'
        isClosed:
          type: boolean
        createdAt:
          type: string
          format: date-time
        createdBy:
          type: string
          format: uuid
        updatedAt:
          type: string
          format: date-time
        updatedBy:
          type: string
          format: uuid
    LocalTime:
      type: object
      properties:
        hour:
          type: integer
          format: int32
        minute:
          type: integer
          format: int32
        second:
          type: integer
          format: int32
        nano:
          type: integer
          format: int32
    BranchPositionDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        departmentId:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
        createdBy:
          type: string
          format: uuid
        updatedAt:
          type: string
          format: date-time
        updatedBy:
          type: string
          format: uuid
    BranchDepartmentDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        branchId:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
        createdBy:
          type: string
          format: uuid
        updatedAt:
          type: string
          format: date-time
        updatedBy:
          type: string
          format: uuid
    BranchDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        bankId:
          type: string
          format: uuid
        regionId:
          type: string
          format: uuid
        code:
          type: string
        name:
          type: string
        description:
          type: string
        phoneNumber:
          type: string
        email:
          type: string
        addressLine:
          type: string
        postalCode:
          type: string
        city:
          type: string
        state:
          type: string
        countryId:
          type: string
          format: uuid
        timeZoneId:
          type: string
          format: uuid
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float
        isActive:
          type: boolean
        openedAt:
          type: string
          format: date-time
        closedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        createdBy:
          type: string
          format: uuid
        updatedAt:
          type: string
          format: date-time
        updatedBy:
          type: string
          format: uuid
    BankRegionDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        divisionId:
          type: string
          format: uuid
        code:
          type: string
        name:
          type: string
        description:
          type: string
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
        createdBy:
          type: string
          format: uuid
        updatedAt:
          type: string
          format: date-time
        updatedBy:
          type: string
          format: uuid
    BankDivisionDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        bankId:
          type: string
          format: uuid
        code:
          type: string
        name:
          type: string
        description:
          type: string
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
        createdBy:
          type: string
          format: uuid
        updatedAt:
          type: string
          format: date-time
        updatedBy:
          type: string
          format: uuid
    CalendarAssignmentDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        calendarId:
          type: string
          format: uuid
        branchId:
          type: string
          format: uuid
        departmentId:
          type: string
          format: uuid
        positionId:
          type: string
          format: uuid
        effectiveFrom:
          type: string
          format: date-time
        effectiveTo:
          type: string
          format: date-time
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
        createdBy:
          type: string
          format: uuid
        updatedAt:
          type: string
          format: date-time
        updatedBy:
          type: string
          format: uuid
    WorkingCalendarDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        bankId:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        isDefault:
          type: boolean
        timeZoneId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        createdBy:
          type: string
          format: uuid
        updatedAt:
          type: string
          format: date-time
        updatedBy:
          type: string
          format: uuid
    BankDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        code:
          type: string
        name:
          type: string
        description:
          type: string
        logoUrl:
          type: string
        primaryColor:
          type: string
        secondaryColor:
          type: string
        contactEmail:
          type: string
        contactPhone:
          type: string
        websiteUrl:
          type: string
        addressLine:
          type: string
        postalCode:
          type: string
        city:
          type: string
        state:
          type: string
        countryId:
          type: string
          format: uuid
        timeZoneId:
          type: string
          format: uuid
        isActive:
          type: boolean
        establishedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        createdBy:
          type: string
          format: uuid
        updatedAt:
          type: string
          format: date-time
        updatedBy:
          type: string
          format: uuid
    FilterOptions:
      type: object
      properties:
        caseInsensitiveStrings:
          type: boolean
        includeInheritedFields:
          type: boolean
      description: Filter options for customizing filter behavior
    FilterRequestBankHolidayDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/BankHolidayDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Filter criteria for bank holidays
    PaginationRequest:
      type: object
      properties:
        pageNumber:
          type: integer
          description: The zero-based page number to retrieve.
          format: int32
          example: 0
          default: 0
        pageSize:
          type: integer
          description: The number of items per page.
          format: int32
          example: 10
          default: 10
        sortBy:
          type: string
          description: The field to sort the results by.
          example: name
        sortDirection:
          type: string
          description: The direction of sorting, either ASC or DESC.
          example: DESC
          default: DESC
      description: Represents a pagination request for retrieving paginated results, including page number, size, sort field, and direction.
    RangeFilter:
      type: object
      properties:
        ranges:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RangeObject'
          description: Map of field names to their range criteria
      description: Represents range filters for numeric fields
    RangeObject:
      type: object
      properties:
        from:
          type: object
          description: Start value of the range
        to:
          type: object
          description: End value of the range
      description: Represents a range with from and to values
    PaginationResponse:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            type: object
            description: The list of items for the current page.
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    PaginationResponseBankHolidayDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/BankHolidayDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    FilterRequestBranchHoursDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/BranchHoursDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Filter criteria for branch hours
    PaginationResponseBranchHoursDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/BranchHoursDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    FilterRequestBranchPositionDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/BranchPositionDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Filter criteria for branch positions
    PaginationResponseBranchPositionDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/BranchPositionDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    FilterRequestBranchDepartmentDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/BranchDepartmentDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Filter criteria for branch departments
    PaginationResponseBranchDepartmentDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/BranchDepartmentDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    FilterRequestBranchDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/BranchDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Filter criteria for branches
    PaginationResponseBranchDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/BranchDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    FilterRequestBankRegionDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/BankRegionDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Filter criteria for bank regions
    PaginationResponseBankRegionDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/BankRegionDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    FilterRequestBankDivisionDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/BankDivisionDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Filter criteria for bank divisions
    PaginationResponseBankDivisionDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/BankDivisionDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    FilterRequestCalendarAssignmentDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/CalendarAssignmentDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Filter criteria for calendar assignments
    PaginationResponseCalendarAssignmentDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/CalendarAssignmentDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    FilterRequestWorkingCalendarDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/WorkingCalendarDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Filter criteria for working calendars
    PaginationResponseWorkingCalendarDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/WorkingCalendarDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    FilterRequestBankDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/BankDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Filter criteria for banks
    PaginationResponseBankDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/BankDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
